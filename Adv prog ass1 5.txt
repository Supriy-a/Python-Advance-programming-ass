1.
def anagram(in_string,in_list):
    in_string_list = list(in_string.lower())
    in_string_list.remove(' ')
    not_exist_list = []
    output = False
    for item in in_list:
        for ele in item:
            if ele in in_string_list:
                in_string_list.remove(ele)
            else:
                not_exist_list.append(ele)
    if len(in_string_list) == 0 and len(not_exist_list) == 0:
        output = True
    print(f'anagram{in_string,in_list} ➞ {output}')
            
anagram("Justin Bieber", ["injures", "ebb", "it"])
anagram("Natalie Portman", ["ornamental", "pita"])
anagram("Chris Pratt", ["chirps", "rat"])
anagram("Jeff Goldblum", ["jog", "meld", "bluffs"])
*********************************************************
2.
def leaderboards(in_list):
    temp_dict = {}
    out_list = []
    for ele in in_list:
        temp_dict[(ele['reputation']*2)+ele['score']] = ele
    for ele in sorted(temp_dict.keys(),reverse=True):
        out_list.append(temp_dict[ele])
    print(f'leaderboards({in_list}) ➞ {out_list}')
    
leaderboards([
  { "name": "a", "score": 100, "reputation": 20 },
  { "name": "b", "score": 90, "reputation": 40 },
  { "name": "c", "score": 115, "reputation": 30 },
])
*************************************************************
3.
def hangman(in_string,in_list):
    out_string = ''
    for ele in range(len(in_string)):
        if in_string[ele].lower() in in_list:
            out_string += in_string[ele]
        elif in_string[ele] in '"! ':
            out_string += in_string[ele]
        else:
            out_string += '-'
    print(f'hangman{in_string,in_list} ➞ {out_string}')
        
hangman("helicopter", ["o", "e", "s"])
hangman("tree", ["r", "t", "e"])
hangman("Python rules", ["a", "n", "p", "r", "z"])
hangman("He\"s a very naughty boy!", ["e", "a", "y"])
************************************************************
4.
def max_collatz(in_num):
    out_list = []
    out_list.append(in_num)
    temp_in_num = in_num
    while True:
        if temp_in_num%2 == 0:
            temp_in_num /= 2
        else:
            temp_in_num = (temp_in_num*3)+1
        out_list.append(int(temp_in_num))
        if temp_in_num ==1:
            break
            
    x= str(out_list)
    print(f'max_collatz({in_num}) ➞ {max(out_list)}')

max_collatz(10)
max_collatz(32)
max_collatz(85)

********************************************************
5.
def digit_sort(in_list):
    max_len = len(str(max(in_list)))
    output = []
    for item in range(max_len,0,-1):
        temp = []
        for ele in in_list:
            if len(str(ele)) == item:
                temp.append(ele)
        output.extend(sorted(temp))
    print(f'digit_sort({in_list}) ➞ {output}')
    
digit_sort([77, 23, 5, 7, 101])
digit_sort([1, 5, 9, 2, 789, 563, 444])
digit_sort([53219, 3772, 564, 32, 1])